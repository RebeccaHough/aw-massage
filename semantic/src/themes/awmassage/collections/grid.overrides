/*******************************
         Site Overrides
*******************************/

/*******************************
           Snug Grids 
********************************/

/* ui.snug.grid introduces a new class for grids that by default collapses all gutters (left- and right-padding) between columns/items in a row and row spacing (top- and bottom-margins) between rows */

.ui.snug.grid {
  margin-top: -(@snugRowSpacing / 2);
  margin-bottom: -(@snugRowSpacing / 2);
  margin-left: -(@snugGutterWidth / 2);
  margin-right: -(@snugGutterWidth / 2);
}

.ui.snug.grid + .snug.grid {
  margin-top: @consecutiveGridDistance;
}

/*******************************
          Snug Columns 
********************************/

/* For 16 column wide grids */ 
.ui.snug.grid > .column:not(.row),
.ui.snug.grid > .row > .column {
  padding-left: (@snugGutterWidth / 2);
  padding-right: (@snugGutterWidth / 2);
}

.ui.snug.grid > * {
  padding-left: (@snugGutterWidth / 2);
  padding-right: (@snugGutterWidth / 2);
}

/* Vertical padding when no rows */
.ui.snug.grid > .column:not(.row) {
  padding-top: (@snugRowSpacing / 2);
  padding-bottom: (@snugRowSpacing / 2);
}

/*******************************
          Snug Rows 
********************************/

.ui.snug.grid > .row {
  padding: 0px;
  padding-top: @snugRowSpacing;
  padding-bottom: @snugRowSpacing;
}

.ui.snug.grid > .column:not(.row),
.ui.snug.grid > .row > .column {
  padding-left: @snugGutterWidth;
  padding-right: @snugGutterWidth;
}

.ui.snug.grid > * {
  padding-left: @snugGutterWidth;
  padding-right: @snugGutterWidth;
}

/*******************************
      Snug Loose Coupling 
********************************/

/* Align Dividers with Gutter */
.ui.snug.grid .row + .ui.divider {
  flex-grow: 1;
  margin: (@snugRowSpacing / 2) (@snugGutterWidth / 2);
}
.ui.snug.grid .column + .ui.vertical.divider {
  height: ~"calc(50% - "(@snugRowSpacing/2)~")";
}

/*******************************
      Snug Grid Variations
*******************************/


/*-----------------------
       Page Grid
-------------------------*/

@media only screen and (max-width: @largestMobileScreen) {
  .ui.snug.page.grid {
    padding-left: @snugMobileGutterWidth;
    padding-right: @snugMobileGutterWidth;
  }
}
@media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestTabletScreen) {
  .ui.snug.page.grid {
    padding-left: @snugTabletGutterWidth;
    padding-right: @snugTabletGutterWidth;
  }
}
@media only screen and (min-width: @computerBreakpoint) and (max-width: @largestSmallMonitor) {
  .ui.snug.page.grid {
    padding-left: @snugComputerGutterWidth;
    padding-right: @snugComputerGutterWidth;
  }
}
@media only screen and (min-width: @largeMonitorBreakpoint) and (max-width: @largestLargeMonitor) {
  .ui.snug.page.grid {
    padding-left: @snugLargeMonitorWidth;
    padding-right: @snugLargeMonitorWidth;
  }
}
@media only screen and (min-width: @widescreenMonitorBreakpoint) {
  .ui.snug.page.grid {
    padding-left: @snugWidescreenMonitorWidth;
    padding-right: @snugWidescreenMonitorWidth;
  }
}

/*-----------------------
       Divided Grid
-------------------------*/

.ui[class*="vertically divided"].snug.grid > .column:not(.row),
.ui[class*="vertically divided"].snug.grid > .row > .column {
  margin-top: (@snugRowSpacing / 2);
  margin-bottom: (@snugRowSpacing / 2);
}

/* Vertically Divided */
.ui.snug[class*="vertically divided"].grid > .row:before {
  width: ~"calc(100% - "@snugGutterWidth~")";
  margin: 0% (@snugGutterWidth / 2);
}

/*----------------------
         Celled
-----------------------*/

.ui.snug.celled.grid {
  margin: @snugCelledMargin;
}

.ui.snug.celled.grid > .column:not(.row),
.ui.snug.celled.grid > .row > .column {
  padding: @snugCelledRelaxedPadding;
}

/*----------------------
         Colored
-----------------------*/

.ui.snug.grid > .row > .red.column,
.ui.snug.grid > .row > .orange.column,
.ui.snug.grid > .row > .yellow.column,
.ui.snug.grid > .row > .olive.column,
.ui.snug.grid > .row > .green.column,
.ui.snug.grid > .row > .teal.column,
.ui.snug.grid > .row > .blue.column,
.ui.snug.grid > .row > .violet.column,
.ui.snug.grid > .row > .purple.column,
.ui.snug.grid > .row > .pink.column,
.ui.snug.grid > .row > .brown.column,
.ui.snug.grid > .row > .grey.column,
.ui.snug.grid > .row > .black.column {
  margin-top: -(@snugRowSpacing / 2);
  margin-bottom: -(@snugRowSpacing / 2);
  padding-top: -(@snugGutterWidth / 2);
  padding-bottom: -(@snugGutterWidth / 2);
}

/*-------------------
      Doubling
--------------------*/

/* Tablet Only */
@media only screen and (min-width: @tabletBreakpoint) and (max-width: @largestTabletScreen) {
  .ui.snug.grid > .doubling.row > .column,
  .ui.snug.doubling.grid > .row > .column {
    padding-top: (@snugRowSpacing / 2) !important;
    padding-bottom: (@snugRowSpacing / 2) !important;
  }
}

/* Mobile Only */
@media only screen and (max-width: @largestMobileScreen) {
  .ui.snug.grid > .doubling.row > .column,
  .ui.snug.doubling.grid > .row > .column {
    padding-top: (@snugRowSpacing / 2) !important;
    padding-bottom: (@snugRowSpacing / 2) !important;
  }
}

/*-------------------
      Stackable
--------------------*/

@media only screen and (max-width: @largestMobileScreen) {
  .ui.snug.stackable.grid > .row > .wide.column,
  .ui.snug.stackable.grid > .wide.column,
  .ui.snug.stackable.grid > .column.grid > .column,
  .ui.snug.stackable.grid > .column.row > .column,
  .ui.snug.stackable.grid > .row > .column,
  .ui.snug.stackable.grid > .column:not(.row),
  .ui.snug.grid > .stackable.stackable.row > .column {
    padding: (@snugStackableRowSpacing / 2) (@snugStackableGutter / 2) !important;
  }

  /* Don't pad inside segment or nested grid */
  .ui.snug.grid .ui.snug.stackable.grid,
  .ui.segment:not(.vertical) .ui.snug.stackable.page.grid {
    margin-left: -(@snugStackableGutter / 2) !important;
    margin-right: -(@snugStackableGutter / 2) !important;
  }

  .ui.snug.stackable.celled.grid > .column:not(.row),
  .ui.snug.stackable.divided:not(.vertically).grid > .column:not(.row),
  .ui.snug.stackable.celled.grid > .row > .column,
  .ui.snug.stackable.divided:not(.vertically).grid > .row > .column {
    padding-top: @stackableRowSpacing !important;
    padding-bottom: @stackableRowSpacing !important;
  }
}